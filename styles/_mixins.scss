@mixin LinkHover($color, $hoverColor, $startingAmount) {
    color: var(--black);
    padding: 0.25em 0.3em 0.2em 0.25em;
    background: linear-gradient(to bottom, $color 0%, $color 100%);
    background-position: 0 100%;
    background-repeat: repeat-x;
    background-size: 0.05em $startingAmount;
    border-radius: 0em;
    text-decoration: none;
    width: fit-content;
    flex-direction: row;
    align-items: center;
    gap: 0.4em;
    transition: background-size 0.15s ease-in-out, color 0.1s linear, border-radius 0.15s ease-in-out, font-weight 0.1s linear;

    i {
        color: $color;
        transition: color 0.1s linear;
    }

    &:hover, &.Activated {
        color: $hoverColor;
        font-weight: 400;
        background-size: 0.05em 100%;
        cursor: pointer;
        border-radius: 0.1em;

        i {
            color: $hoverColor;
        }
    }
}

@mixin RoundButton() {
    font-size: 1.5em;
    font-weight: 300;
    font-family: var(--rubik);
    padding: 0.2em 1.25em;
    box-shadow: 0 0 0 0.075em var(--black);
    border-radius: 10em;
    color: var(--black);
    background-color: var(--white);
    text-decoration: none;
    text-align: center;
    width: fit-content;
    transition: background-color 0.1s linear, color 0.1s linear, transform 0.1s linear, font-weight 0.1s linear;

    &:hover {
        background-color: var(--black);
        color: var(--white);
        transform: scale(1.1);
        cursor: pointer;
    }
}

@mixin Input() {
    flex-direction: row-reverse;
    flex-grow: 1;
    max-width: 100%;
    min-width: 2em;
    align-items: flex-end;
    justify-content: flex-end;
    gap: 0em;

    input, textarea {
        background: none;
        flex-basis: 5em;
        flex-grow: 1;
        font-size: 1.8em;
        font-family: var(--franklin);
        font-weight: 100;
        min-width: 2em;
        transition: border-color 0.1s linear;
        outline: none;
        border: none;

        &:not(:placeholder-shown), &:not(:placeholder-shown) ~ label {
            border-color: var(--green);
        }

        &:hover, &:hover ~ label {
            border-color: var(--yellow);
            cursor:text;
        }
    }

    input {
        padding: 0.005em 0.2em;
        border-bottom: 2px solid var(--lightRed);
    }

    textarea {
        padding: 0.3em;
        min-height: 1em;
        border: 2px solid var(--lightRed);
        border-radius: 0.2em;
        line-height: 120%;
        resize: none;
    }

    label {
        font-size: 1.25em;
        font-weight: 300;
        font-family: var(--cairo);
        letter-spacing: 0.02em;
        transition: border-color 0.1s linear;
        padding: 0.25em 0.2em;
        height: fit-content;
        border-bottom: 2px solid var(--lightRed);
        text-align: center;

        &:hover, &:hover~input {
            border-bottom: 2px solid var(--yellow);
            cursor:text;
        }
    }
}

@mixin ResetButton() {
    position: absolute;
    top: 0em;
    right: -0.1em;
    font-size: 1.5em;
    padding: 0.35em;
    border-radius: 10em;
    transition: background-color 0.1s linear, color 0.1s linear, transform 0.25s ease-in-out;

    &:hover {
        background-color: var(--black);
        color: var(--white);
        transform: scale(1.1) rotate(-270deg);
        cursor: pointer;
    }
}

@mixin QuillStyleAdjustments() {
    .ql-toolbar, .ql-container {
        width: 100%;
    }

    .ql-toolbar {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        gap: 0.25em 1em;
        background-color: var(--grey);
        border: 0.1em solid var(--grey);
        border-radius: 0.5em 0.5em 0 0;

        .ql-formats {
            margin: 0 auto;

            .ql-stroke {
                transition: stroke 0.1s linear;
            }
            .ql-fill {
                transition: fill 0.1s linear;
            }
            .ql-picker-label, button {
                transition: transform 0.1s linear;
            }

            button:hover {
                transform: scale(1.2);
                
                .ql-stroke {
                    stroke: var(--yellow);
                }
                .ql-fill {
                    fill: var(--yellow);
                }
            }

            .ql-picker-label:hover {
                transform: scale(1.1);
                
                .ql-stroke {
                    stroke: var(--yellow);
                }
                .ql-fill {
                    fill: var(--yellow);
                }
            }

            .ql-picker, .ql-picker-label, button, svg {
                color: var(--ecommerceWhite);

                .ql-stroke {
                    stroke: var(--ecommerceWhite);
                }
                .ql-fill {
                    fill: var(--ecommerceWhite);
                }

                &.ql-active {
                    color: var(--yellow);

                    .ql-stroke {
                        stroke: var(--yellow);
                    }
                    .ql-fill {
                        fill: var(--yellow);
                    }
                }
            }

            .ql-picker-options {
                background-color: var(--grey);

                .ql-selected, .ql-picker-item:hover {
                    color: var(--yellow);
                }
            }

            .ql-header {
                .ql-picker-label::before, .ql-picker-item::before {
                    content: 'Body';
                    font-family: var(--franklin);
                    font-weight: 200;
                    font-size: 1.25em;
                }

                .ql-picker-label[data-value="3"]::before, .ql-picker-item[data-value="3"]::before {
                    content: 'Heading';
                    font-family: var(--arima);
                    font-weight: 300;
                    font-size: 1.35em;
                    line-height: 130%;
                }
                .ql-picker-item[data-value="3"]::before {
                    font-size: 1.75em;
                }
            }

            .ql-color-picker {
                .ql-picker-label svg {
                    right: 0px;

                    .ql-stroke {
                        stroke: var(--ecommerceWhite);
                    }
                }

                .ql-color-label {
                    opacity: 1;

                    &.ql-stroke {
                        stroke: var(--black);
                    }
                }

                .ql-picker-label .ql-color-label.ql-stroke {
                    stroke: var(--black);
                }
                .ql-picker-label[data-value="yellow"] .ql-color-label.ql-stroke {
                    stroke: var(--yellow) !important;
                }
                .ql-picker-label[data-value="green"] .ql-color-label.ql-stroke {
                    stroke: var(--green) !important;
                }
                .ql-picker-label[data-value="lightRed"] .ql-color-label.ql-stroke {
                    stroke: var(--lightRed) !important;
                }
                .ql-picker-label[data-value="lightPurple"] .ql-color-label.ql-stroke {
                    stroke: var(--lightPurple) !important;
                }
                .ql-picker-label[data-value="blue"] .ql-color-label.ql-stroke {
                    stroke: var(--blue) !important;
                }
                .ql-picker-label[data-value="grey"] .ql-color-label.ql-stroke {
                    stroke: var(--grey) !important;
                }

                .ql-picker-item {
                    background-color: var(--black);
                }
                .ql-picker-item[data-value="yellow"] {
                    background-color: var(--yellow) !important;
                }
                .ql-picker-item[data-value="green"] {
                    background-color: var(--green) !important;
                }
                .ql-picker-item[data-value="lightRed"] {
                    background-color: var(--lightRed) !important;
                }
                .ql-picker-item[data-value="lightPurple"] {
                    background-color: var(--lightPurple) !important;
                }
                .ql-picker-item[data-value="blue"] {
                    background-color: var(--blue) !important;
                }
                .ql-picker-item[data-value="grey"] {
                    background-color: var(--grey) !important;
                }
            }
        }
    }

    .ql-container {
        border: 0.1em dashed var(--black);
        border-top: none;
        padding: 0.25em 0.5em;
        border-radius: 0 0 0.5em 0.5em;

        .ql-editor {
            .ql-color-yellow {
                color: var(--yellow);
            }
            .ql-color-green {
                color: var(--green);
            }
            .ql-color-lightRed {
                color: var(--lightRed);
            }
            .ql-color-lightPurple {
                color: var(--lightPurple);
            }
            .ql-color-blue {
                color: var(--blue);
            }
            .ql-color-grey {
                color: var(--grey);
            }
        }
    }
}

@keyframes DiffuseIn {
    from {
        filter: blur(20px);
        opacity: 0;
    }
    to {
        filter: blur(0px);
        opacity: 1;
    }
}

@keyframes SlideRight {
    from {
        transform: translateX(-75%);
        opacity: 0;
    }
    to {
        transform: translateX(0%);
        opacity: 1;
    }
}

@keyframes SlideDown {
    from {
        transform: translateY(-50%);
        opacity: 0;
    }
    to {
        transform: translateY(0%);
        opacity: 1;
    }
}

@keyframes ColorJump {
    0% {
        background-color: var(--white);
        transform: scale(1);
    }
    20% {
        background-color: var(--green);
        transform: scale(1.1, 1.15);
    }
    40% {
        background-color: var(--yellow);
        transform: scale(1.2, 1.27);
    }
    60% {
        background-color: var(--red);
        transform: scale(1.15, 1.25);
    }
    80% {
        background-color: var(--green);
        transform: scale(1.1, 1.15);
    }
    100% {
        background-color: var(--yellow);
        transform: scale(1.1, 1.125);
    }
}

@keyframes Wind {
    from { transform: scale(1,1) }
    10% { transform: scale(1,1) }
    30% { transform: scale(1.001, 1) }
    50% { transform: scale(1.000, 1) }
    70% { transform: scale(1.001, 1) }
    90% { transform: scale(1,1) }
    to { transform: scale(1,1) }
}

@keyframes Burst {
    from {
        transform: translate(91.5%, 88%) scale(0);
    }
    to {
        transform: translate(0,0) scale(1);
    }
}

@keyframes LiftHand {
    from { transform: rotateY(0deg) scale(1); }
    55% { transform: rotateY(-15deg) scale(1.1); }
    75% { transform: rotateY(-15deg) scale(1.1); }
    to { transform: rotateY(0deg) scale(1); }
}

@keyframes SlideIn {
    from { transform: translateX(15vw) rotate(10deg) }
    to {transform: translateX(0vw) rotate(0deg) }
}