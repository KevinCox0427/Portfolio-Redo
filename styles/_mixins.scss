@mixin LinkHover($color, $hoverColor, $startingAmount) {
    color: var(--black);
    padding: 0.25em 0.1em 0.2em 0.1em;
    background: linear-gradient(to bottom, $color 0%, $color 100%);
    background-position: 0 100%;
    background-repeat: repeat-x;
    background-size: 0.05em $startingAmount;
    border-radius: 0em;
    text-decoration: none;
    width: fit-content;
    flex-direction: row;
    align-items: center;
    gap: 0.4em;
    transition: background-size 0.15s ease-in-out, color 0.1s linear, border-radius 0.15s ease-in-out, font-weight 0.1s linear;

    i {
        color: $color;
        transition: color 0.1s linear;
    }

    &:hover, &.Activated {
        color: $hoverColor;
        background-size: 0.05em 100%;
        cursor: pointer;
        border-radius: 0.1em;

        i {
            color: $hoverColor;
        }
    }
}

@mixin RoundButton($color) {
    font-size: 1.5em;
    font-weight: 200;
    font-family: var(--franklin);
    padding: 0.3em 1.5em;
    background: none;
    box-shadow: 0 0 0 0.06em var(--black);
    border-radius: 10em;
    color: var(--black);
    text-decoration: none;
    text-align: center;
    width: fit-content;
    transition: box-shadow 0.1s linear, background-color 0.1s linear, color 0.1s linear, transform 0.1s linear, font-weight 0.1s linear;

    &:hover, &.Activated {
        box-shadow: 0 0 0 0.06em $color;
        font-weight: 400;
        background-color: $color;
        color: var(--white);
        transform: scale(1.05);
        cursor: pointer;
    }
}

@mixin Input() {
    flex-direction: row-reverse;
    flex-basis: 25em;
    flex-grow: 1;
    max-width: 100%;
    min-width: 2em;
    height: fit-content;
    align-items: flex-end;
    justify-content: flex-end;
    gap: 0em;
    border-radius: 0.35em 0.35em 0 0;

    input {
        background: none;
        flex-basis: 5em;
        flex-grow: 1;
        font-size: 1.8em;
        font-family: var(--franklin);
        font-weight: 100;
        min-width: 2em;
        transition: border-color 0.1s linear;
        outline: none;
        border: none;
        align-self: stretch;
        padding: 0.15em 0.2em 0.05em 0.2em;
        border-bottom: 2px solid var(--lightRed);

        &:not(:placeholder-shown), &:not(:placeholder-shown) ~ label {
            border-color: var(--green);
        }

        &:hover, &:hover ~ label {
            border-color: var(--yellow);
            cursor:text;
        }
    }

    label {
        font-size: 1.25em;
        font-weight: 300;
        font-family: var(--cairo);
        letter-spacing: 0.02em;
        transition: border-color 0.1s linear;
        padding: 0.25em 0.2em 0.25em 0.4em;
        border-bottom: 2px solid var(--lightRed);
        text-align: center;
        align-self: stretch;
        justify-content: center;

        &:hover, &:hover~input {
            border-bottom: 2px solid var(--yellow);
            cursor:text;
        }
    }
}

@mixin DateInput() {
    flex-direction: row;
    flex-wrap: wrap;
    height: fit-content;
    align-items: center;
    max-width: 100%;
    min-width: 2em;
    gap: 0.25em 0.5em;
    border-radius: 0.35em 0.35em 0 0;

    input {
        opacity: 0;
        pointer-events: none;
        position: absolute;
        
        &:focus ~ .Display {
            p {
                border-color: var(--yellow);
            }
        }
    }

    .Display {

        p {
            font-family: var(--franklin);
            font-weight: 200;
            font-size: 1.5em;
            min-height: 1.25em;
            justify-content: center;
            width: 6.5em;
            padding-right: 1.5em;
            padding-left: 0.5em;
            border-bottom: 2px solid var(--lightRed);
            pointer-events: none;
            transition: border-color 0.1s linear;
    
            &:not(:empty){
                border-color: var(--green);
            }
        }
        
        label {
            position: absolute;
            height: 100%;
            width: 100%;
            top: 0;
            left: 0;
            justify-content: flex-end;
            z-index: 1;

            i {
                position: absolute;
                bottom: 0.1em;
                right: 0em;
                font-size: 1.05em;
                padding: 0.45em 0.5em;
                border-radius: 10em;
                font-size: 1.1em;
                font-family: "Font Awesome 6 Free";
                transition: 0.1s linear color, 0.1s linear background-color, 0.1s linear transform;

                &:hover {
                    color: var(--brightWhite);
                    background-color: var(--black);
                    transform: scale(1.1);
                    cursor: pointer;
                }
            }  
            
            &:hover {
                cursor:pointer;
            }

            &:hover ~ p {
                border-color: var(--yellow);
            }
        }
    }

    .Label {
        font-size: 1.25em;
        font-weight: 300;
        font-family: var(--cairo);
        letter-spacing: 0.02em;
    }
}

@mixin Textarea() {
    flex-basis: 45em;
    flex-grow: 1;
    max-width: 100%;
    min-width: 2em;

    textarea {
        outline: none;
        resize: none;
        background: none;
        font-size: 1.6em;
        font-family: var(--franklin);
        font-weight: 100;
        border: 2px solid var(--lightRed);
        border-radius: 0.2em;
        padding: 10px 12px;
        min-height: 3em;
        min-width: 2em;
        width: calc(100% - 24px);
        line-height: 140%;
        transition: border-color 0.1s linear;

        &:not(:placeholder-shown), &:not(:placeholder-shown) {
            border-color: var(--green);
        }

        &:hover {
            border-color: var(--yellow);
            cursor:text;
        }
    }

    label {
        font-size: 1.3em;
        font-weight: 300;
        font-family: var(--cairo);
        letter-spacing: 0.02em;
        padding: 0 0.1em 0.3em 0.1em;
        transition: border-color 0.1s linear;
    }
}

@mixin List() {
    flex-direction: row;
    flex-wrap: wrap;
    width: fit-content;
    gap: 1em 2em;

    .Option {
        align-items: center;
        justify-content: flex-end;
        flex-direction: row-reverse;

        &:last-child {
            border-bottom: none;
        }

        input {
            height: 1.75em;
            width: 1.75em;
            border: 0.1em solid var(--black);
            box-shadow: 0 0 0 0.3em var(--white) inset;
            border-radius: 10em;
            transition: background-color 0.1s linear, transform 0.1s linear, box-shadow 0.1s linear;
    
            &:checked {
                background-color: var(--black) !important;
            }
    
            &:hover {
                transform: scale(1.05);
                background-color: var(--brightWhite);
                box-shadow: 0 0 0 0.3em var(--brightWhite) inset;
                cursor: pointer;
            }
        }
    
        label {
            font-size: 1.3em;
            font-family: var(--franklin);
            font-weight: 300;
            padding-left: 0.4em;

            &:hover ~ input {
                transform: scale(1.05);
                background-color: var(--brightWhite);
                box-shadow: 0 0 0 0.3em var(--brightWhite) inset;
                cursor: pointer;
            }

            &:hover {
                cursor: pointer;
            }
        }
    }
}

@mixin ResetButton() {
    position: absolute;
    top: 0em;
    right: -0.1em;
    font-size: 1.3em;
    padding: 0.35em;
    border-radius: 10em;
    background-color: var(--brightWhite);
    box-shadow: 0.1em 0.1em 0em 0em rgba(0, 0, 0, 0.03);
    transition: background-color 0.1s linear, color 0.1s linear, transform 0.25s ease-in-out;

    &:hover {
        background-color: var(--black);
        color: var(--white);
        transform: scale(1.1) rotate(-270deg);
        cursor: pointer;
    }
}

@mixin QuillStyleAdjustments() {
    .ql-toolbar, .ql-container {
        width: 100%;
    }

    .ql-toolbar {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        gap: 0.25em 1em;
        background-color: var(--grey);
        border: 0.1em solid var(--grey);

        .ql-formats {
            margin: 0 auto;

            .ql-stroke {
                transition: stroke 0.1s linear;
            }
            .ql-fill {
                transition: fill 0.1s linear;
            }
            .ql-picker-label, button {
                transition: transform 0.1s linear;
            }

            button:hover {
                transform: scale(1.2);
                
                .ql-stroke {
                    stroke: var(--yellow);
                }
                .ql-fill {
                    fill: var(--yellow);
                }
            }

            .ql-picker-label:hover {
                transform: scale(1.1);
                
                .ql-stroke {
                    stroke: var(--yellow);
                }
                .ql-fill {
                    fill: var(--yellow);
                }
            }

            .ql-picker, .ql-picker-label, button, svg {
                color: var(--brightWhite);

                .ql-stroke {
                    stroke: var(--brightWhite);
                }
                .ql-fill {
                    fill: var(--brightWhite);
                }

                &.ql-active {
                    color: var(--yellow);

                    .ql-stroke {
                        stroke: var(--yellow);
                    }
                    .ql-fill {
                        fill: var(--yellow);
                    }
                }
            }

            .ql-picker-options {
                background-color: var(--grey);

                .ql-selected, .ql-picker-item:hover {
                    color: var(--yellow);
                }
            }

            .ql-header {
                .ql-picker-label::before, .ql-picker-item::before {
                    content: 'Body';
                    font-family: var(--franklin);
                    font-weight: 200;
                    font-size: 1.25em;
                }

                .ql-picker-label[data-value="3"]::before, .ql-picker-item[data-value="3"]::before {
                    content: 'Heading';
                    font-family: var(--arima);
                    font-weight: 300;
                    font-size: 1.35em;
                    line-height: 130%;
                }
                .ql-picker-item[data-value="3"]::before {
                    font-size: 1.75em;
                }
            }

            .ql-color-picker {
                .ql-picker-label svg {
                    right: 0px;

                    .ql-stroke {
                        stroke: var(--brightWhite);
                    }
                }

                .ql-color-label {
                    opacity: 1;

                    &.ql-stroke {
                        stroke: var(--black);
                    }
                }

                .ql-picker-label .ql-color-label.ql-stroke {
                    stroke: var(--black);
                }
                .ql-picker-label[data-value="yellow"] .ql-color-label.ql-stroke {
                    stroke: var(--yellow) !important;
                }
                .ql-picker-label[data-value="green"] .ql-color-label.ql-stroke {
                    stroke: var(--green) !important;
                }
                .ql-picker-label[data-value="lightRed"] .ql-color-label.ql-stroke {
                    stroke: var(--lightRed) !important;
                }
                .ql-picker-label[data-value="lightPurple"] .ql-color-label.ql-stroke {
                    stroke: var(--lightPurple) !important;
                }
                .ql-picker-label[data-value="blue"] .ql-color-label.ql-stroke {
                    stroke: var(--blue) !important;
                }
                .ql-picker-label[data-value="grey"] .ql-color-label.ql-stroke {
                    stroke: var(--grey) !important;
                }

                .ql-picker-item {
                    background-color: var(--black);
                }
                .ql-picker-item[data-value="yellow"] {
                    background-color: var(--yellow) !important;
                }
                .ql-picker-item[data-value="green"] {
                    background-color: var(--green) !important;
                }
                .ql-picker-item[data-value="lightRed"] {
                    background-color: var(--lightRed) !important;
                }
                .ql-picker-item[data-value="lightPurple"] {
                    background-color: var(--lightPurple) !important;
                }
                .ql-picker-item[data-value="blue"] {
                    background-color: var(--blue) !important;
                }
                .ql-picker-item[data-value="grey"] {
                    background-color: var(--grey) !important;
                }
            }
        }
    }

    .ql-container {
        border: none;

        .ql-editor {
            padding: 0;

            .ql-color-yellow {
                color: var(--yellow);
            }
            .ql-color-green {
                color: var(--green);
            }
            .ql-color-lightRed {
                color: var(--lightRed);
            }
            .ql-color-lightPurple {
                color: var(--lightPurple);
            }
            .ql-color-blue {
                color: var(--blue);
            }
            .ql-color-grey {
                color: var(--grey);
            }
        }
    }
}

@mixin PortfolioCard() {
    .Project {
        flex-direction: row;
        flex-wrap: wrap;
        text-decoration: none;
        justify-content: center;
        flex-grow: 1;
        flex-basis: 30em;
        max-width: 45em;
        gap: 0.5em 0;
        padding-right: 2em;

        a {
            text-decoration: none;
            width: fit-content;
        }

        &:hover .Card h2 {
            background-size: 0.05em 100%;
            cursor: pointer;
            border-radius: 0.1em;
        }

        .ImageWrapper {
            overflow: hidden;
            border-radius: 0.25em;
            box-shadow: 0 0 0.3em 0.05em rgba(0,0,0, 0.05) inset, 0.2em 0.2em 0 0 rgba(0,0,0, 0.04);
            flex-basis: 13em;
            flex-grow: 1;
            width: calc(100% - 2em);
            margin: 1em -2em 1em 0;
            max-width: 16em;
            background-color: rgba(255,255,255, 0.3);
            padding: 1em;
            transition: transform 0.15s ease-in-out;
            
            img {
                height: 100%;
                width: 100%;
                object-fit: contain;
                transition: transform 0.15s ease-in-out, filter 0.15s ease-in-out;
            }

            &:hover {
                img {
                    transform: scale(1.1);
                    filter: blur(3px) brightness(0.9);
                }
            }
        }
        
        .Card {
            background-color: var(--brightWhite);
            color: var(--black);
            flex-basis: 20em;
            flex-grow: 3.5;
            margin-right: -2em;
            padding: 1em 1.25em;
            align-self: center;
            min-height: 16em;
            border-radius: 0.25em;
            box-shadow: 0.15em 0.2em 0em 0 rgba(0,0,0, 0.03);
            transition: transform 0.15s ease-in-out;
    
            h2 {
                font-size: clamp(1.5em, 2.5vw, 1.75em);
                width: fit-content;
                font-weight: 300;
                font-family: var(--franklin);
                text-decoration: none;
                background: linear-gradient(to bottom, var(--yellow) 0%, var(--yellow) 100%);
                padding: 0.1em;
                background-position: 0 100%;
                background-repeat: repeat-x;
                background-size: 0.05em 0.1em;
                border-radius: 0em;
                text-decoration: none;
                transition: background-size 0.15s ease-in-out, color 0.1s linear, border-radius 0.15s ease-in-out;
            }
    
            .Description {
                flex-grow: 1;
                font-family: var(--franklin);
                font-weight: 200;
                line-height: 140%;
                font-size: 1.3em;
                margin: 1em 0;
                justify-content: center;
            }
    
            .Tags {
                flex-direction: row;
                flex-wrap: wrap;
                justify-content: space-between;
                align-items: center;
                gap: 0.75em 1.5em;
                border-top: 1.5px dashed var(--black);
                padding-top: 1em;
    
                .Tag {
                    @include LinkHover(var(--lightPurple), var(--white), 0.125em);
                    text-align: center;
                    width: fit-content;
                    font-size: 1.3em;
                    white-space: nowrap;
                    font-weight: 300;
                    margin-top: -0.25em;
                }
    
                .Skills {
                    flex-basis: 10em;
                    flex-grow: 1;
                    flex-direction: row;
                    flex-wrap: wrap;
                    gap: 0.5em 0.75em;
                    list-style-position: inside;
    
                    li {
                        display: list-item;
                        font-size: 1.15em;
                        font-weight: 300;
                    }
                }
            }
        }

        @media (min-width: 650px) {
            &:hover {
                .ImageWrapper {
                    transform: translateX(-1.75em);
                }
                .Card {
                    transform: translateX(1em);
                }
            }
        }
    }
}

@mixin FakeBrowser() {
    flex-direction: column-reverse;
    opacity: 0;
    flex-shrink: 0;
    border-radius: 0.5em;
    overflow: hidden;

    .FakeBrowser {
        flex-direction: row;
        align-items: center;
        height: fit-content;
        width: calc(100% - 1.5em);
        gap: 0.5em;
        padding: 0.4em 0.75em;
        background-color: var(--brightWhite);
        box-shadow: 0 0 0.25em 0 rgba(0,0,0, 0.2);
        z-index: 1;
        overflow: hidden;

        div {
            border-radius: 10em;
            height: 0.75em;
            width: 0.75em;

            &:nth-child(1) {
                background-color: var(--lightRed);
            }
            &:nth-child(2) {
                background-color: var(--yellow);
            }
            &:nth-child(3) {
                background-color: var(--green);
                margin-right: -3.25em;
            }
        }

        a {
            color: var(--black);
            margin: auto;
            font-size: 1em;
            padding: 0.1em;
            margin-top: -0.05em;
            background: linear-gradient(to bottom, var(--yellow) 0%, var(--yellow) 100%);
            background-position: 0 100%;
            background-repeat: repeat-x;
            background-size: 0.05em 0.15em;
            border-radius: 0em;
            text-decoration: none;
            transition: background-size 0.15s ease-in-out, color 0.1s linear, border-radius 0.15s ease-in-out, font-weight 0.1s linear;

            &:hover {
                background-size: 0.05em 100%;
                cursor: pointer;
                border-radius: 0.1em;
            }
        }
    }

    .WebsiteWrapper {
        height: clamp(13em, 17vw, 17em);
        width: clamp(22em, 32vw, 32em);
        border: none;
        outline: none;
        overflow-y: scroll;
        transition: 0.1s linear filter;

        img {
            width: 100%;
            height: auto;
        }

        &:hover {
            filter: brightness(0.8);
        }

        &:hover ~ .FakeBrowser a {
            background-size: 0.05em 100%;
            cursor: pointer;
            border-radius: 0.1em;
        }
    }
}



@keyframes DiffuseIn {
    from {
        filter: blur(20px);
        opacity: 0;
    }
    to {
        filter: blur(0px);
        opacity: 1;
    }
}

@keyframes SlideRight {
    from {
        transform: translateX(-75%);
        opacity: 0;
    }
    to {
        transform: translateX(0%);
        opacity: 1;
    }
}

@keyframes SlideDown {
    from {
        transform: translateY(-50%);
        opacity: 0;
    }
    to {
        transform: translateY(0%);
        opacity: 1;
    }
}

@keyframes ColorJump {
    0% {
        background-color: var(--white);
        transform: scale(1);
    }
    17% {
        background-color: var(--lightRed);
        transform: scale(1.1, 1.15);
    }
    35% {
        background-color: var(-blue);
        transform: scale(1.2, 1.27);
    }
    51% {
        background-color: var(--green);
        transform: scale(1.15, 1.25);
    }
    68% {
        background-color: var(--lightPurple);
        transform: scale(1.1, 1.15);
    }
    85% {
        background-color: var(--green);
        transform: scale(1.1, 1.125);
    }
    100% {
        background-color: var(--yellow);
        transform: scale(1.1, 1.125);
    }
}

@keyframes Wind {
    from { transform: scale(1,1) }
    10% { transform: scale(1,1) }
    30% { transform: scale(1.001, 1) }
    50% { transform: scale(1.000, 1) }
    70% { transform: scale(1.001, 1) }
    90% { transform: scale(1,1) }
    to { transform: scale(1,1) }
}

@keyframes Burst {
    from {
        transform: translate(91.5%, 88%) scale(0);
    }
    to {
        transform: translate(0,0) scale(1);
    }
}

@keyframes LiftHand {
    from { transform: rotateY(0deg) scale(1); }
    55% { transform: rotateY(-15deg) scale(1.1); }
    75% { transform: rotateY(-15deg) scale(1.1); }
    to { transform: rotateY(0deg) scale(1); }
}

@keyframes SlideIn {
    from { transform: translateX(15vw) rotate(10deg) }
    to {transform: translateX(0vw) rotate(0deg) }
}

@keyframes Spin {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}